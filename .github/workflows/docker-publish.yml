name: Publish Docker image (GHCR)

on:
  workflow_run:
    workflows: ["SurviveOS-branding build"]
    types:
      - completed

jobs:
  publish-image:
    if: |
      github.event.workflow_run.conclusion == 'success' &&
      github.event.workflow_run.head_branch == 'main'
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repo (for Dockerfile & scripts)
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.workflow_run.head_sha }}

    - name: Download kiwix-tools artifact
      uses: actions/download-artifact@v4
      with:
        run-id: ${{ github.event.workflow_run.id }}
      # artifact name is dynamic (kiwix-tools-<sha>) so we grab everything

    - name: Prepare build context
      run: |
        mkdir buildctx
        # Artifact comes in a folder; find the zip and extract
        SERVE=$(find "$GITHUB_WORKSPACE" -name kiwix-serve -type f | head -n1)
        MANAGE=$(find "$GITHUB_WORKSPACE" -name kiwix-manage -type f | head -n1)
        if [ -z "$SERVE" ] || [ -z "$MANAGE" ]; then echo "Branded binaries not found in artifact" >&2; exit 1; fi
        cp "$SERVE" buildctx/kiwix-serve
        cp "$MANAGE" buildctx/kiwix-manage
        # copy supporting files needed for image
        cp make-library.sh buildctx/
        cp -a zims buildctx/zims || true
        # create minimal Dockerfile
        cat > buildctx/Dockerfile <<'EOF'
        FROM ubuntu:22.04
        RUN apt-get update && DEBIAN_FRONTEND=noninteractive \
            apt-get install -y --no-install-recommends libstdc++6 libzim9 libkiwix14 libmagic1 zlib1g && \
            rm -rf /var/lib/apt/lists/*
        COPY kiwix-serve /usr/local/bin/
        COPY kiwix-manage /usr/local/bin/
        COPY make-library.sh /usr/local/bin/
        RUN chmod +x /usr/local/bin/make-library.sh
        ENTRYPOINT ["kiwix-serve"]
        EOF

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64,amd64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push image
      uses: docker/build-push-action@v5
      with:
        context: buildctx
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/surviveos-hub:latest
          ghcr.io/${{ github.repository_owner }}/surviveos-hub:sha-${{ github.event.workflow_run.head_sha }} 